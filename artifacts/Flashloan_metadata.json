{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addressProvider",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "message",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "val",
						"type": "uint256"
					}
				],
				"name": "Log",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_assetAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "LogWithdraw",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amt",
						"type": "uint256"
					}
				],
				"name": "TestKyber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "returnVal",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "addressesProvider",
				"outputs": [
					{
						"internalType": "contract ILendingPoolAddressesProvider",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "_params",
						"type": "bytes"
					}
				],
				"name": "executeOperation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_asset",
						"type": "address"
					}
				],
				"name": "flashloan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_assetAddress",
						"type": "address"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdraw(address)": {
					"details": "Withdraw asset.",
					"params": {
						"_assetAddress": "Asset to be withdrawn."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"executeOperation(address,uint256,address,bytes)": {
					"notice": "This function is called after your contract has received the flash loaned amount"
				},
				"flashloan(address)": {
					"notice": "Flash loan 1000000000000000000 wei (1 ether) worth of `_asset`"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Flashloan.sol": "Flashloan"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Flashloan.sol": {
			"keccak256": "0x1216eeda719d584337f7f679bb56ad886e48f4bd2a683e5c96e1d686a1199cd2",
			"urls": [
				"bzz-raw://4a216f19042bb00e08cd66ee027c6b4417d2e069c5c32e95daec137ea01bcd95",
				"dweb:/ipfs/QmNmS63muteCZYdNPmGQEfurLZShSzgxovHAPU5baMcnCF"
			]
		},
		"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d",
			"license": "MIT",
			"urls": [
				"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2",
				"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb"
			]
		},
		"node_modules/@openzeppelin/contracts/math/SafeMath.sol": {
			"keccak256": "0x2fedd3a10f0d561aa6edfb743d3a854a3e92f7ff3d7f294de259cd779177e134",
			"license": "MIT",
			"urls": [
				"bzz-raw://53ecf080278d4c9be7d289c04a029d58f2e7e48c5a39b067ee9af3be7360bb95",
				"dweb:/ipfs/QmeRMHESDb6PnYBiYhpkQnHQSjZAdtWJwPxZYfNuXpfZkL"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0x977b83d350bd4961dcbb2804174a0cc15685c76a575f09f34e2e016029cacabe",
			"license": "MIT",
			"urls": [
				"bzz-raw://a51762f894dbeb296462fb00d49482debb1b029b76f5e6df8528828bfce26b97",
				"dweb:/ipfs/QmYh3cubEZEMCJQFEBmHCtaP3JMAuZ4WNpQ5QcTgq59NvX"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x5c99c26cba04882d6cf71f2004af17ecd366d1edd281f94645ead365fbfcf16e",
			"license": "MIT",
			"urls": [
				"bzz-raw://7890857ce2b63821bb357de01455247c3dcfb03c032a0aaeebcc373b7dd51cf5",
				"dweb:/ipfs/QmbpNvNdrNQq29k1JjHCE5onRUrmz19JvYcSnbW3gGWvZA"
			]
		},
		"node_modules/@openzeppelin/contracts/token/ERC20/SafeERC20.sol": {
			"keccak256": "0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a",
				"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea",
			"license": "MIT",
			"urls": [
				"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c",
				"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN"
			]
		},
		"node_modules/@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0",
			"license": "MIT",
			"urls": [
				"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f",
				"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96"
			]
		},
		"src/Contracts/KyberNetwork.sol": {
			"keccak256": "0x681a625206f2b38fbd16ca5ab2491ef6bf7076550ee400bb7e811981028f77a1",
			"urls": [
				"bzz-raw://50e55c81ba90c24ef1d411f26c326195bdbea154f3de025007ba1bc62fc91a78",
				"dweb:/ipfs/QmTKbM1bThzfCB4ZBgspLheU6sN2sYirGvo9LroDyrsqPR"
			]
		},
		"src/Interfaces/FlashLoanReceiverBase.sol": {
			"keccak256": "0x6ed4db624786b40ad1e47a3c11a91170b5ed9a8b98fa9781fa21fe92242c5b48",
			"urls": [
				"bzz-raw://8e4b9b767d8a2471e40485ce6dd35fd9c997f7521eff6b7c699f3c3a836dd8fc",
				"dweb:/ipfs/QmTdqKTpmWgip84tyWXsz3cSo8M17JVMkjZexFUehimpds"
			]
		},
		"src/Interfaces/IFlashLoanReceiver.sol": {
			"keccak256": "0xc688ebe5803548214c24ee3ba93795b962ed9710ba19d8af3ab08d88264d29e8",
			"urls": [
				"bzz-raw://64afe8c4d3bcf6f8dfd6a1e4ecb333ceb2f3911a585b76171f8d714a040fd6de",
				"dweb:/ipfs/QmQr3WMsfkcFvrwmzTQUAwgmv6RTkaqWpKUxnnzY2dD9ev"
			]
		},
		"src/Interfaces/ILendingPool.sol": {
			"keccak256": "0x6f08156cbfb608cd1206a5d852d5cb5cbc0fd5eef1286bd76ed8fafc3bfb3926",
			"urls": [
				"bzz-raw://6c1ab98ce6941f5468dc9681a01552aa5b1113c2e4e2939c0ac586ff13549abe",
				"dweb:/ipfs/QmZwfcHzbRoJWnShRGUnAVN5QyD1qwHe9sKsNp5VhAqQpk"
			]
		},
		"src/Interfaces/ILendingPoolAddressesProvider.sol": {
			"keccak256": "0x4e412ec7393ad2c1c2cb160a2d636c014be6e9b9d6b8f896766222f5ba3af8ec",
			"urls": [
				"bzz-raw://2fa3d51b5cb5060dd4a4005fe0cfa9690a5686dc1be8215414c3c90c12d99202",
				"dweb:/ipfs/QmW6DyeCYsnoKEQArnRWo1Meevpjg6VwmuViVZAsnvofLo"
			]
		},
		"src/Interfaces/IUniSwap.sol": {
			"keccak256": "0xabb9789734fa01f4aa0be18d0a6911be905c28d045680607a4d34143b41b2d66",
			"urls": [
				"bzz-raw://98b56dd3c210e4679425c86c78ae6d18e48331904a6b7914616b1c8a971038fa",
				"dweb:/ipfs/QmZvSdeG7LBLWTH9jhtuaHiJnFaMrb1Vqz4xgiJMw4EHJv"
			]
		},
		"src/Utils/Withdrawable.sol": {
			"keccak256": "0x5f5a0e81027e9b67fecd35fad812c5baf8f48effed00a45ceb237cd88af4d4d3",
			"urls": [
				"bzz-raw://c43bc6d5e9501cb7ee36b18cfbc62a9e454ee1b1da019877c5b9e9a65a2b495b",
				"dweb:/ipfs/QmddRhjTAmeVQ3uimcESwk1yDTC9rhftncm9VRrVmbgzLE"
			]
		}
	},
	"version": 1
}